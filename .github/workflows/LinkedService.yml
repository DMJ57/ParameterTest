name: Deploy ADF LinkedService

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
env:
  # environment: "${{ github.event.inputs.environment }}"
  resourceGroupName: $(jq -r ".${{ github.event.inputs.environment }}.resourceGroupName" ./bicep/parameters.json)
  keyVaultName: $(jq -r ".${{ github.event.inputs.environment }}.keyVaultName" ./bicep/parameters.json)
  connectionSecretName: $(jq -r ".${{ github.event.inputs.environment }}.connectionSecretName" ./bicep/parameters.json)
  credentialSecretName: $(jq -r ".${{ github.event.inputs.environment }}.credentialSecretName" ./bicep/parameters.json)
  adfName: $(jq -r ".${{ github.event.inputs.environment }}.adfName" ./bicep/parameters.json)
    
jobs:
  
  deploy:
    runs-on: ubuntu-latest

    steps: 
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Print selected environment and adfname
      run: |
          echo "Selected environment: ${{ env.environment }}"
          echo "Selected adf: ${{ env.adfName }}"

    - name: Install jq
      run: sudo apt-get install jq

    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: >
              {
                "clientId":"${{ secrets.AZURE_CLIENT_ID }}",
                "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}",
                "subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}",
                "tenantId":"${{ secrets.AZURE_TENANT_ID }}"
              }
        enable-AzPSSession: true
          
    - name: Read linkedService JSON files and deploy
      run: |
        # keyVaultLinkedService=$(cat ./linkedService/AzureKeyVault1.json)
        # keyVaultLinkedService=$(echo "$keyVaultLinkedService" | jq --arg keyVaultUrl "https://${{env.keyVaultName}}.azure.net/" '.properties.typeProperties.baseUrl = $keyVaultUrl')
        # linkedService1=$(cat ./linkedService/AzureBlobStorage1.json)
        # linkedService1=$(echo "$linkedService1" | jq --arg connectionSecretName "${{env.connectionSecretName}}" '.properties.typeProperties.connectionString.secretName = $connectionSecretName')  
        # linkedService1=$(echo "$linkedService1" | jq --arg credentialSecretName "${{env.credentialSecretName}}" '.properties.typeProperties.encryptedCredential.secretName = $credentialSecretName')
        keyVaultLinkedService=$(jq --arg keyVaultUrl "https://${{env.keyVaultName}}.azure.net/" \
            --arg connectionSecretName "${{env.connectionSecretName}}" \
            --arg credentialSecretName "${{env.credentialSecretName}}" \
            '.properties.typeProperties.baseUrl = $keyVaultUrl | .properties.typeProperties.connectionString.secretName = $connectionSecretName | .properties.typeProperties.encryptedCredential.secretName = $credentialSecretName' \
            ./linkedService/AzureKeyVault1.json)
       
        linkedServices=$(jq -n \
          --arg keyVaultLinkedService "$keyVaultLinkedService" \
          --arg linkedService1 "$linkedService1" \
          '[
            {
              "name": "AzureKeyVault1", 
              "definition": $keyVaultLinkedService | fromjson 
            },
            {
              "name": "AzureBlobStorage1", 
              "definition": $linkedService1 | fromjson 
            }
          ]')

        az deployment group create \
          --resource-group "${{ env.resourceGroupName }}" \
          --template-file ./bicep/modules/linkedservice.bicep \
          --parameters dataFactoryName=${{ env.adfName }} \
          --parameters linkedServices="$linkedServices" \
          
          
